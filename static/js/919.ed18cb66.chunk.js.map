{"version":3,"file":"static/js/919.ed18cb66.chunk.js","mappings":"+PA8IA,MAzIA,WACE,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAwBF,EAAAA,EAAAA,UAAS,IAAjC,eAAOG,EAAP,KAAaC,EAAb,KACA,GAA8BJ,EAAAA,EAAAA,UAAS,IAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KACA,GAA4CN,EAAAA,EAAAA,WAAS,GAArD,eAAOO,EAAP,KAAuBC,EAAvB,KACA,GAAkDR,EAAAA,EAAAA,WAAS,GAA3D,eAAOS,EAAP,KAA0BC,EAA1B,KACA,GAAwCV,EAAAA,EAAAA,UAAS,MAAjD,eAAOW,EAAP,KAAqBC,EAArB,KAuDA,IArDAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,8GAECC,EAAAA,EAAAA,IAAgBrB,GAFjB,OAEhBsB,EAFgB,OAGtBd,EAASc,GAHa,gDAKtBC,QAAQC,MAAR,MALsB,yDAAH,qDASjBC,EAAc,mCAAG,8GAEIC,EAAAA,EAAAA,IAAa1B,GAFjB,OAEbsB,EAFa,OAGnBZ,EAAQY,EAASb,MAHE,gDAKnBc,QAAQC,MAAR,MALmB,yDAAH,qDASdG,EAAiB,mCAAG,8GAECC,EAAAA,EAAAA,IAAgB5B,GAFjB,OAEhBsB,EAFgB,OAGtBV,EAAWU,EAASO,SAHE,gDAKtBN,QAAQC,MAAR,MALsB,yDAAH,qDASvBJ,IACAK,IACAE,GACD,GAAE,CAAC3B,KAUJmB,EAAAA,EAAAA,YAAU,WACRD,EAAgBhB,EAAS4B,SAC1B,GAAE,CAAC5B,EAAS4B,YAURvB,EACH,OAAO,wCAGT,IAAQwB,EAAuDxB,EAAvDwB,MAAOC,EAAgDzB,EAAhDyB,SAAUC,EAAsC1B,EAAtC0B,YAAaC,EAAyB3B,EAAzB2B,OAAQC,EAAiB5B,EAAjB4B,aAE9C,OACE,4BACE,iBAAKC,UAAU,oBAAf,WACE,gBACEC,IAAG,0CAAqCJ,GACxCK,IAAKP,EACLK,UAAU,gBAGZ,gBAAKA,UAAU,gBAAf,UACE,iBAAKA,UAAU,mBAAf,WACE,wBAAKL,KACL,sCACA,uBAAIC,KACJ,oCACA,6BAAKE,EAAOK,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,UAC1C,wCAAgBP,cAKtB,iBAAKC,UAAU,sBAAf,WACE,eAAIA,UAAU,qBAAd,qCACA,4BACE,mBAAQO,QAlDG,WACjB7B,GAAmBD,EACpB,EAgDoCuB,UAAU,cAAvC,SACoB,SAEnBvB,IACC,eAAIuB,UAAU,YAAd,SACG3B,EAAK8B,KAAI,SAAAK,GAAM,OACd,2BACE,gBACEP,IAAG,0CAAqCO,EAAOC,cAC/CP,IAAKM,EAAOH,QAEd,eAAGL,UAAU,cAAb,UACGQ,EAAOH,MACR,kBAFF,cAGcG,EAAOE,eARdF,EAAOG,GADF,OAepB,mBAAQJ,QAlEM,WACpB3B,GAAsBD,EACvB,EAgEuCqB,UAAU,iBAA1C,SACuB,YAEtBrB,IACC,eAAIqB,UAAU,iBAAd,SACGzB,EAAQ4B,KAAI,SAAAS,GAAM,OACjB,2BACE,qCAAaA,EAAOC,WACpB,uBAAID,EAAOE,YAFJF,EAAOD,GADC,aAW3B,mBAAQJ,QA1ES,WAEjBvC,EADEa,GAGO,IAEZ,EAoEkCmB,UAAU,iBAAzC,8BAKL,C","sources":["components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams, useLocation, useNavigate } from 'react-router-dom';\nimport { getMovieDetails, getMovieCast, getMovieReviews } from '../api';\nimport './movieDetalis.module.css';\n\nfunction MovieDetails() {\n  const { movieId } = useParams();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [movie, setMovie] = useState(null);\n  const [cast, setCast] = useState([]);\n  const [reviews, setReviews] = useState([]);\n  const [isCastExpanded, setIsCastExpanded] = useState(false);\n  const [isReviewsExpanded, setIsReviewsExpanded] = useState(false);\n  const [previousPath, setPreviousPath] = useState(null);\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        const response = await getMovieDetails(movieId);\n        setMovie(response);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    const fetchMovieCast = async () => {\n      try {\n        const response = await getMovieCast(movieId);\n        setCast(response.cast);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    const fetchMovieReviews = async () => {\n      try {\n        const response = await getMovieReviews(movieId);\n        setReviews(response.results);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchMovieDetails();\n    fetchMovieCast();\n    fetchMovieReviews();\n  }, [movieId]);\n\n  const toggleCast = () => {\n    setIsCastExpanded(!isCastExpanded);\n  };\n\n  const toggleReviews = () => {\n    setIsReviewsExpanded(!isReviewsExpanded);\n  };\n\n  useEffect(() => {\n    setPreviousPath(location.pathname);\n  }, [location.pathname]);\n\n  const handleGoBack = () => {\n    if (previousPath) {\n      navigate(previousPath);\n    } else {\n      navigate('/');\n    }\n  };\n\n  if (!movie) {\n    return <div>Loading...</div>;\n  }\n\n  const { title, overview, poster_path, genres, vote_average } = movie;\n\n  return (\n    <div>\n      <div className=\"details-container\">\n        <img\n          src={`https://image.tmdb.org/t/p/w300/${poster_path}`}\n          alt={title}\n          className=\"img-poster\"\n        />\n\n        <div className=\"details-right\">\n          <div className=\"div-detalis-film\">\n            <h1>{title}</h1>\n            <h2>Overview</h2>\n            <p>{overview}</p>\n            <h2>Genres</h2>\n            <p> {genres.map(genre => genre.name).join(', ')}</p>\n            <p>User Score: {vote_average}</p>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"div-additional-info\">\n        <h2 className=\"h2-additional-info\">Additional information</h2>\n        <div>\n          <button onClick={toggleCast} className=\"button-cast\">\n            {isCastExpanded ? 'Cast' : 'Cast'}\n          </button>\n          {isCastExpanded && (\n            <ul className=\"ul-actors\">\n              {cast.map(member => (\n                <li key={member.id}>\n                  <img\n                    src={`https://image.tmdb.org/t/p/w200/${member.profile_path}`}\n                    alt={member.name}\n                  />\n                  <p className=\"ul-actors-p\">\n                    {member.name}\n                    <br />\n                    Character: {member.character}\n                  </p>\n                </li>\n              ))}\n            </ul>\n          )}\n          <button onClick={toggleReviews} className=\"button-reviews\">\n            {isReviewsExpanded ? 'Reviews' : 'Reviews'}\n          </button>\n          {isReviewsExpanded && (\n            <ul className=\"ul-all-reviews\">\n              {reviews.map(review => (\n                <li key={review.id}>\n                  <h2>Author: {review.author}</h2>\n                  <p>{review.content}</p>\n                </li>\n              ))}\n            </ul>\n          )}\n        </div>\n      </div>\n\n      <button onClick={handleGoBack} className=\"go-back-button\">\n        &#11164; Go Back\n      </button>\n    </div>\n  );\n}\n\nexport default MovieDetails;\n"],"names":["movieId","useParams","location","useLocation","navigate","useNavigate","useState","movie","setMovie","cast","setCast","reviews","setReviews","isCastExpanded","setIsCastExpanded","isReviewsExpanded","setIsReviewsExpanded","previousPath","setPreviousPath","useEffect","fetchMovieDetails","getMovieDetails","response","console","error","fetchMovieCast","getMovieCast","fetchMovieReviews","getMovieReviews","results","pathname","title","overview","poster_path","genres","vote_average","className","src","alt","map","genre","name","join","onClick","member","profile_path","character","id","review","author","content"],"sourceRoot":""}