{"version":3,"file":"static/js/530.cd82122f.chunk.js","mappings":"yNAoCA,UAhCA,WACE,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,8GAECC,EAAAA,EAAAA,IAAgBP,GAFjB,OAEhBQ,EAFgB,OAGtBJ,EAAWI,EAASC,SAHE,gDAKtBC,QAAQC,MAAR,MALsB,yDAAH,qDASvBL,GACD,GAAE,CAACN,KAGF,4BACE,qCACA,wBACGG,EAAQS,KAAI,SAAAC,GAAM,OACjB,2BACE,uBAAIA,EAAOC,UACX,uBAAID,EAAOE,YAFJF,EAAOG,GADC,QAS1B,C","sources":["components/ReviewsFilm/Reviews.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from '../api';\n\nfunction Reviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const fetchMovieReviews = async () => {\n      try {\n        const response = await getMovieReviews(movieId);\n        setReviews(response.results);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchMovieReviews();\n  }, [movieId]);\n\n  return (\n    <div>\n      <h1>Reviews</h1>\n      <ul>\n        {reviews.map(review => (\n          <li key={review.id}>\n            <p>{review.author}</p>\n            <p>{review.content}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default Reviews;\n"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","fetchMovieReviews","getMovieReviews","response","results","console","error","map","review","author","content","id"],"sourceRoot":""}