{"version":3,"file":"static/js/227.c093254c.chunk.js","mappings":"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","sources":["icons/star.svg","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgStar(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    stroke: \"#ffc629\",\n    strokeLinecap: \"round\",\n    strokeWidth: 1.5,\n    d: \"M6.04 7.772c-2.46.557-3.69.835-3.983 1.776-.292.94.546 1.921 2.223 3.882l.434.507c.476.557.715.836.822 1.18.107.345.071.717-.001 1.46l-.066.677c-.253 2.617-.38 3.925.386 4.506.766.582 1.918.051 4.22-1.009l.597-.274c.654-.302.981-.452 1.328-.452.347 0 .674.15 1.329.452l.595.274c2.303 1.06 3.455 1.59 4.22 1.01.767-.582.64-1.89.387-4.507m1.189-3.824c1.677-1.96 2.515-2.941 2.223-3.882-.293-.941-1.523-1.22-3.983-1.776l-.636-.144c-.699-.158-1.048-.237-1.329-.45-.28-.213-.46-.536-.82-1.182l-.328-.588C13.58 3.136 12.947 2 12 2c-.947 0-1.58 1.136-2.847 3.408\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgStar);\nexport default __webpack_public_path__ + \"static/media/star.be5cf35f362e8ed71980c2cc493d5647.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieDetails, getMovieCast, getMovieReviews } from '../api';\n\nimport notPeople from '../../img/no people img.png';\nimport star from '../../icons/star.svg';\n\nimport './movieDetalis.module.css';\n\nfunction MovieDetails() {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [cast, setCast] = useState([]);\n  const [reviews, setReviews] = useState([]);\n  const [isReviewsExpanded, setIsReviewsExpanded] = useState(false);\n  const [isModalMoviesOpen, setIsModalMoviesOpen] = useState(false);\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        const response = await getMovieDetails(movieId);\n        setMovie(response);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    const fetchMovieCast = async () => {\n      try {\n        const response = await getMovieCast(movieId);\n        setCast(response.cast);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    const fetchMovieReviews = async () => {\n      try {\n        const response = await getMovieReviews(movieId);\n        setReviews(response.results);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchMovieDetails();\n    fetchMovieCast();\n    fetchMovieReviews();\n  }, [movieId]);\n\n  const toggleReviews = () => {\n    setIsReviewsExpanded(!isReviewsExpanded);\n  };\n\n  if (!movie) {\n    return <div>Loading...</div>;\n  }\n\n  const { title, overview, poster_path, genres, vote_average } = movie;\n\n  const openModalMovies = () => {\n    setIsModalMoviesOpen(true);\n  };\n\n  const closeModalMovies = () => {\n    setIsModalMoviesOpen(false);\n  };\n\n  const handleOnClose = e => {\n    if (e.code === 'Escape') {\n      closeModalMovies();\n    }\n  };\n\n  window.addEventListener('keydown', handleOnClose);\n\n  const handleOverlyClick = e => {\n    if (e.currentTarget === e.target) {\n      closeModalMovies();\n    }\n  };\n\n  return (\n    <div className=\"details-container\">\n      <div className=\"overlay\">\n        <img\n          src={`https://image.tmdb.org/t/p/w300/${poster_path}`}\n          alt={title}\n          className=\"img-poster\"\n        />\n\n        <div className=\"details-right\">\n          <div className=\"div-detalis-film\">\n            <div className=\"title-evaluation\">\n              <h1>{title}</h1>\n              <div className=\"star-container\">\n                <img src={star} alt=\"svg star\" className=\"svg-star\" />\n                <p className=\"evaluation\">{vote_average.toFixed(1)}</p>\n              </div>\n            </div>\n\n            <h2 className=\"title-overview-genres\">Overview</h2>\n            <p>{overview}</p>\n            <h2 className=\"title-overview-genres\">Genres</h2>\n            <p> {genres.map(genre => genre.name).join(', ')}</p>\n          </div>\n        </div>\n      </div>\n\n      <h2 className=\"h2-additional-info\">Additional information</h2>\n\n      <div>\n        <button onClick={openModalMovies} className=\"button-cast\">\n          Cast\n        </button>\n\n        {isModalMoviesOpen && (\n          <div className=\"modalOverly\" onClick={handleOverlyClick}>\n            <div className=\"modalContent\">\n              <button onClick={closeModalMovies} className=\"closeModalBtn\">\n                &#10006;\n              </button>\n\n              <ul className=\"ul-actors\">\n                {cast.map(member => (\n                  <li key={member.id}>\n                    {member.profile_path ? (\n                      <img\n                        src={`https://image.tmdb.org/t/p/w200/${member.profile_path}`}\n                        alt={member.name}\n                      />\n                    ) : (\n                      <img\n                        src={notPeople}\n                        alt=\"Default Poster\"\n                        className=\"movie-poster\"\n                      />\n                    )}\n\n                    <p className=\"ul-actors-p\">\n                      {member.name}\n                      <br />\n                      Character: {member.character}\n                    </p>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          </div>\n        )}\n\n        <button onClick={toggleReviews} className=\"button-reviews\">\n          Reviews\n        </button>\n\n        {isReviewsExpanded && (\n          <ul className=\"ul-all-reviews\">\n            {reviews.map(review => (\n              <li key={review.id}>\n                <h2>Author: {review.author}</h2>\n                <p>{review.content}</p>\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default MovieDetails;\n"],"names":["movieId","useParams","useState","movie","setMovie","cast","setCast","reviews","setReviews","isReviewsExpanded","setIsReviewsExpanded","isModalMoviesOpen","setIsModalMoviesOpen","useEffect","fetchMovieDetails","getMovieDetails","response","console","error","fetchMovieCast","getMovieCast","fetchMovieReviews","getMovieReviews","results","title","overview","poster_path","genres","vote_average","closeModalMovies","window","addEventListener","e","code","className","src","alt","star","toFixed","map","genre","name","join","onClick","currentTarget","target","member","profile_path","notPeople","character","id","review","author","content"],"sourceRoot":""}